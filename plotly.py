# -*- coding: utf-8 -*-
"""Власна версія visual_lab5_.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1UGj3NoGke8v_5vP9UbaOCrb3XrWpSPrQ
"""

import plotly
import plotly.graph_objs as go
import plotly.express as px
from plotly.subplots import make_subplots
import numpy as np
import pandas as pd

from google.colab import drive

drive.mount('/content/gdrive')

data = pd.read_csv('gdrive/My Drive/timesData.csv')
print("\t\tName's of columns\n", data.columns)

print("\t\t5 row of table\n", data.head)

"""***Кругова діаграма для відображення загальної оцінки у країнах***"""

fig = px.pie(data, values='total_score', names='country',
             title="Pie Char for total score of  every country",
             hover_data=['income'],
             color_discrete_sequence=px.colors.qualitative.Dark24,
             template='plotly_dark')
fig.show()

"""***Кругова діаграма для відображення доходів у кожному році***"""

fig = px.pie(data, values='income', names='year',
             title="Pie Char for annual income of every year",
             hover_data=['income'],
             color_discrete_sequence=px.colors.sequential.Plasma,
             template='plotly_dark')
fig.show()

fig = go.Figure()
fig.add_trace(go.Pie(values=data['income'], labels=data['year'],
                     title="Pie Char for annual income of every year",
                     marker=dict(colors=['#000099', '#ffff33', '##33ff33', '#800060',
                                         '#00ff00', '# #ffff00'])))
fig.show()

"""*** Кругова діаграма із винесенням секторів ***"""

colors = ['#0d0887', '#46039f', '##7201a8', '#9c179e', '#bd3786', '#d8576b']
trace = [go.Pie(labels=data['year'],
                values=data['income'],
                pull=[0.5, 0, 0, 0, 0, 0],
                hoverinfo='label+percent',
                marker=dict(colors=colors))]
fig = go.Figure(data=trace)
fig.show()

colors = ['#0d0887', '#46039f', '##7201a8', '#9c179e', '#bd3786', '#d8576b']
fig = go.Figure()
fig.add_trace(go.Pie(labels=data['year'],
                     values=data['income'],
                     pull=[0.5, 0, 0, 0, 0, 0],
                     hole=0.9))
fig.update_layout(title="Приклад кругової діаграми", title_x=0.5,
                  margin=dict(l=0, r=0, t=30, b=0),
                  annotations=[dict(text='Річні<br>доходи ',
                                    x=0.5, y=0.5, font_size=20, showarrow=False)])
fig.show()

colors = ['#0d0887', '#46039f', '##7201a8', '#9c179e', '#bd3786', '#d8576b']
fig = go.Figure()
fig.add_trace(go.Pie(labels=data['year'],
                     values=data['income'],
                     hole=0.5))
fig.update_layout(title="Приклад кругової діаграми", title_x=0.5,
                  margin=dict(l=0, r=0, t=30, b=0),
                  annotations=[dict(text='Річні<br>доходи ',
                                    x=0.5, y=0.5, font_size=20, showarrow=False)])
fig.show()

data_stud = pd.read_csv('gdrive/My Drive/StudentsPerformance1.csv')
print(data_stud.columns)
print(data_stud.head())

"""***Гістограма***"""
fig = px.histogram(data_stud, x="math_score",
                   title='Histogram of bills',
                   labels={'math_score': 'math score'},
                   opacity=0.8,
                   color="gender",
                   template='plotly_dark')
fig.show()

fig = go.Figure()
fig.add_trace(go.Histogram(
    x=data_stud['reading_score'],
    histnorm='percent',
    name='reading_score',
    marker_color='#EB89B5',
    opacity=0.75
))
fig.add_trace(go.Histogram(
    x=data_stud['writing_score'],
    histnorm='percent',
    name='writing_score',
    marker_color='#330C73',
    opacity=0.75
))

fig.update_layout(
    title_text='Histrogram plot',
    xaxis_title_text='Value',
    yaxis_title_text='Count',
    bargap=0.2,
    bargroupgap=0.1,
    template='plotly_dark')
fig.show()

"""***Стовпчикова діаграма***"""

fig = px.bar(data_stud, x='parental level of education', y='reading_score',
             color='reading_score', labels={'parental level of education'},
             height=400, template='plotly_dark')
fig.show()

fig = px.bar(data_stud, x="gender", y="math_score",
             color='parental level of education', barmode='group',
             height=400, template='plotly_dark')

fig.update_layout(legend_orientation="h", legend=dict(x=.5, xanchor="center"),
                  margin=dict(l=0, r=0, t=0, b=0))
fig.show()

fig = go.Figure()
fig.add_trace(go.Box(y=data_stud['reading_score'], name='reading score', marker_color='#ff8000'))
fig.add_trace(go.Box(y=data_stud['writing_score'], name='writing score', marker_color='#ffff00'))
fig.update_layout(title="Comparison reading and writing score",
                  xaxis_title="Subject", yaxis_title="Score", template='plotly_dark')
fig.show()

fig = go.Figure()
fig.add_trace(go.Box(x=data_stud['reading_score'], name='reading score', marker_color='#00cc66'))
fig.add_trace(go.Box(x=data_stud['writing_score'], name='writing score', marker_color='#9933ff'))
fig.update_layout(title="Comparison reading and writing score",
                  xaxis_title="Subject", yaxis_title="Score", template='plotly_dark')
fig.show()

fig = go.Figure()
fig.add_trace(go.Box(x=data_stud['reading_score'], boxpoints='all', marker_color='#3b00b3'))
fig.add_trace(go.Box(x=data_stud['writing_score'], boxpoints='all', marker_color='#ff0080'))
fig.update_layout(title="Comparison reading and writing score",
                  xaxis_title="Subject", yaxis_title="Score",
                  template='plotly_dark')
fig.show()
